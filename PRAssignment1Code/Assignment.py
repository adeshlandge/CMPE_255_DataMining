{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "corporate-grocery",
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.sparse import csr_matrix\n",
    "from sklearn import metrics\n",
    "from sklearn.preprocessing import Normalizer\n",
    "from sklearn.pipeline import make_pipeline\n",
    "import sys\n",
    "from sklearn.utils import shuffle\n",
    "from sklearn.metrics import silhouette_score \n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "optimum-sauce",
   "metadata": {},
   "outputs": [],
   "source": [
    "colList = list()\n",
    "rowList = list()\n",
    "dataList = list()\n",
    "with open('data/train.dat', 'r') as fileData:\n",
    "    datalines = fileData.readlines();\n",
    "    totalcolumns = 0;\n",
    "    shapeCount = 0 # variable to calculate the shape size\n",
    "    totalrows = len(datalines)  \n",
    "   \n",
    "    for i in range(totalrows):\n",
    "        dataVar = datalines[i].split()\n",
    "        if len(dataVar) % 2 != 0:\n",
    "            raise ValueError(\"Total no.of keys mismatches the total no.of values. It is an invalid compressed sparse row matrix.\")\n",
    "        shapeCount += len(dataVar)//2 #Rounding off to its previous integer value to avoid decimals while calculating shape size.\n",
    "        for j in range(0, len(dataVar), 2): \n",
    "            cols = int(dataVar[j]) - 1;\n",
    "            if cols+1 > totalcolumns:\n",
    "                totalcolumns = cols+1;\n",
    "\n",
    "data = np.zeros(shapeCount, dtype=np.single) #\n",
    "indices = np.zeros(shapeCount, dtype=np.intc) #\n",
    "indptr = np.zeros(totalrows+1, dtype=np.longlong) #\n",
    "n = 0  #\n",
    "for i in range(totalrows):\n",
    "    dataVar = datalines[i].split()\n",
    "    for j in range(0, len(dataVar), 2): \n",
    "        indices[n] = int(dataVar[j]) - 1\n",
    "        data[n] = float(dataVar[j+1])\n",
    "        n += 1\n",
    "    indptr[i+1] = n \n",
    "#csr_matrix((data, indices, indptr), [shape=(M, N)])\n",
    "#is the standard CSR representation where the column indices for row i are stored in indices[indptr[i]:indptr[i+1]] \n",
    "#and their corresponding values are stored in data[indptr[i]:indptr[i+1]]. \n",
    "#If the shape parameter is not supplied, the matrix dimensions are inferred from the index arrays.       \n",
    "csrMatrixData=csr_matrix((data, indices, indptr), shape=(totalrows, totalcolumns), dtype=np.single)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "robust-tribune",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.feature_extraction.text import TfidfTransformer\n",
    "#Transform a count matrix to a normalized tf or tf-idf representation.\n",
    "tdidfTransformer = TfidfTransformer(norm='l2', use_idf=True, smooth_idf=False) \n",
    "sparse_matrix = tdidfTransformer.fit_transform(csrMatrixData).toarray();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "furnished-denmark",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: total: 9min 6s\n",
      "Wall time: 1min 43s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "from sklearn.decomposition import TruncatedSVD\n",
    "svd = TruncatedSVD(n_components=220,n_iter=7)\n",
    "#reducing the no.of dimensions for the obtained sparse matrix.\n",
    "X = svd.fit_transform(sparse_matrix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "textile-creek",
   "metadata": {},
   "outputs": [],
   "source": [
    "def computeSimilarity(matrix, centroids):\n",
    "    #Calculating dot product of the given matrices. A*Transpose(B) to check the similarity between them.\n",
    "    checkSimilarity = matrix.dot(centroids.T) \n",
    "    return checkSimilarity\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "unsigned-briefing",
   "metadata": {},
   "outputs": [],
   "source": [
    "def createClusters(matrix, centroids):\n",
    "    matrixSimilarity = computeSimilarity(matrix, centroids)  \n",
    "    firstCluster = list()\n",
    "    secondCluster = list()\n",
    "    \n",
    "    for i in range(matrixSimilarity.shape[0]):\n",
    "        row = matrixSimilarity[i]        \n",
    "        sortedMatrix = np.argsort(row)[-1]        \n",
    "        if sortedMatrix == 0:\n",
    "            firstCluster.append(i)\n",
    "        else:\n",
    "            secondCluster.append(i)\n",
    "        \n",
    "    return firstCluster, secondCluster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "applicable-moldova",
   "metadata": {},
   "outputs": [],
   "source": [
    "def reEvaluateCentroid(matrix, clustersList):\n",
    "    centroidList = list()    \n",
    "    for i in range(0,2):\n",
    "        clusterData = matrix[clustersList[i],:]\n",
    "        meanOfCluster = clusterData.mean(0)\n",
    "        centroidList.append(meanOfCluster)\n",
    "        \n",
    "    return np.asarray(centroidList)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "reasonable-subcommittee",
   "metadata": {},
   "outputs": [],
   "source": [
    "def kmeans(matrix, numberOfIterations):\n",
    "    \n",
    "    #shuffling the matrix to randomly fetch two centroids for the given matrix.\n",
    "    newMatrix = shuffle(matrix, random_state=0)   \n",
    "    centroids = newMatrix[:2,:];\n",
    "    #centroids = fetchCentroids(matrix)\n",
    "    \n",
    "    for index in range(numberOfIterations): \n",
    "        #firstCluster, secondCluster = createClusters(matrix, centroids)   \n",
    "        \n",
    "        #Calculating dot product of the given matrices. A*Transpose(B) to check the similarity between them.\n",
    "        matrixSimilarity = matrix.dot(centroids.T)          \n",
    "      \n",
    "        firstCluster = list()\n",
    "        secondCluster = list()\n",
    "         \n",
    "        for i in range(matrixSimilarity.shape[0]):\n",
    "            row = matrixSimilarity[i]        \n",
    "            sortedMatrix = np.argsort(row)[-1]        \n",
    "            if sortedMatrix == 0:\n",
    "                firstCluster.append(i)\n",
    "            else:\n",
    "                secondCluster.append(i)  \n",
    "                \n",
    "        clustersList = list() \n",
    "        if len(firstCluster) > 1:\n",
    "            clustersList.append(firstCluster)\n",
    "        if len(secondCluster) > 1:\n",
    "            clustersList.append(secondCluster)            \n",
    "        centroids = reEvaluateCentroid(matrix, clustersList)\n",
    "        \n",
    "    return firstCluster, secondCluster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "referenced-entrepreneur",
   "metadata": {},
   "outputs": [],
   "source": [
    "def evaluateSSE(matrix, clusters):\n",
    "    sseArray = [];\n",
    "    sseList = list();    \n",
    "    \n",
    "    for clusterVar in clusters:\n",
    "        maxtrixItem = matrix[clusterVar,:]\n",
    "        sumOfSquares = np.sum(np.square(maxtrixItem - np.mean(maxtrixItem)))\n",
    "        sseList.append(sumOfSquares)\n",
    "        \n",
    "    sseArray = np.asarray(sseList)\n",
    "    clusterIndex = np.argsort(sseArray)[-1]\n",
    "    # return index of the cluster which has highest sum of squares value.        \n",
    "    return clusterIndex"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "several-fancy",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "def bisecting_kmeans(matrix, k, iterations):\n",
    "    \n",
    "    startingCluster = list();\n",
    "    clustersList = list();    \n",
    "    \n",
    "    for i in range(matrix.shape[0]):\n",
    "        startingCluster.append(i)\n",
    "    \n",
    "    clustersList.append(startingCluster);\n",
    "    \n",
    "    #until the number of cluster generated by Bisecting kmeans does not match with the given K value, keep looping\n",
    "    while len(clustersList) < k:\n",
    "\n",
    "        clusterIndex = evaluateSSE(matrix, clustersList)\n",
    "        droppedCluster = clustersList[clusterIndex]\n",
    "        \n",
    "        firstCluster, secondCluster = kmeans(matrix[droppedCluster,:], iterations)\n",
    "        del clustersList[clusterIndex]\n",
    "        \n",
    "        cluster1 = list();\n",
    "        cluster2 = list();\n",
    "        for index in firstCluster:\n",
    "            cluster1.append(droppedCluster[index])\n",
    "            \n",
    "        for index in secondCluster:\n",
    "            cluster2.append(droppedCluster[index])\n",
    "        \n",
    "        clustersList.append(cluster1);\n",
    "        clustersList.append(cluster2);\n",
    "    \n",
    "    clusterCollection = [0] * matrix.shape[0];    \n",
    "     \n",
    "    for index, cluster in enumerate(clustersList):\n",
    "        for idx in cluster:\n",
    "            clusterCollection[idx] = index + 1\n",
    "    return clusterCollection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "latter-berry",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Silhouette Score for value K = 3 => 0.022114\n",
      "HarabazScore Score for value K = 3 => 223.382554\n",
      "Silhouette Score for value K = 5 => 0.029287\n",
      "HarabazScore Score for value K = 5 => 173.656482\n",
      "Silhouette Score for value K = 7 => 0.006289\n",
      "HarabazScore Score for value K = 7 => 159.251238\n",
      "Silhouette Score for value K = 9 => 0.014104\n",
      "HarabazScore Score for value K = 9 => 155.457133\n",
      "Silhouette Score for value K = 11 => 0.019252\n",
      "HarabazScore Score for value K = 11 => 138.127182\n",
      "Silhouette Score for value K = 13 => 0.001087\n",
      "HarabazScore Score for value K = 13 => 135.859971\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import calinski_harabasz_score\n",
    "kValuesList = list()\n",
    "scoresList = list()\n",
    "harabazScoreList = list()\n",
    "\n",
    "for k in range(3, 15, 2):\n",
    "    labels = bisecting_kmeans(X, k, 10)\n",
    "    if (k == 7):\n",
    "         # write result to output file\n",
    "        outputFile = open(\"predictionFile.dat\", \"w\")\n",
    "        for index in labels:\n",
    "            outputFile.write(str(index) +'\\n')\n",
    "        outputFile.close()\n",
    "    #compute silhoutte coefficient, since the closest value of Silhoutte coefficent to 1 is for K=7, I have considered 7 as optimal clusters.\n",
    "    silhouetteScore = silhouette_score(X, labels)\n",
    "    harabazScore = calinski_harabasz_score(X, labels)\n",
    "    kValuesList.append(k)\n",
    "    scoresList.append(silhouetteScore)\n",
    "    harabazScoreList.append(harabazScore)\n",
    "    print (\"Silhouette Score for value K = %d => %f\" %(k, silhouetteScore))\n",
    "    print (\"HarabazScore Score for value K = %d => %f\" %(k, harabazScore))\n",
    "    #print(labels[0])\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "monthly-evidence",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.plot(kValuesList, scoresList)\n",
    "plt.xticks(kValuesList, kValuesList)\n",
    "plt.xlabel('Clusters - k')\n",
    "plt.ylabel('Silhouette Scores')\n",
    "#plt.title('Trend of changing silhouette scores for different number of clusters k')\n",
    "plt.grid(linestyle='dotted')\n",
    "\n",
    "plt.savefig('Silhouette.png')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "plt.plot(kValuesList, harabazScoreList)\n",
    "plt.xticks(kValuesList, kValuesList)\n",
    "plt.xlabel('Clusters - k')\n",
    "plt.ylabel('harabazScoreList Scores')\n",
    "#plt.title('Trend of changing silhouette scores for different number of clusters k')\n",
    "plt.grid(linestyle='dotted')\n",
    "\n",
    "plt.savefig('harabaz.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "biblical-supplement",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "anticipated-pizza",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
